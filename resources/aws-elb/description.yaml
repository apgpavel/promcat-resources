---
apiVersion: v1
kind: Description
app: "AWS ELB"
version: 1.0.0
appVersion: 
  - 1.0.0
maintainers:
  - name: Sysdig team
    link: https://sysdig.com/
description: 
data: |
    # AWS Elastic Load Balancer
    Elastic Load Balancing automatically distributes incoming application traffic across multiple targets, such as Amazon EC2 instances, containers, IP addresses, and Lambda functions.
    It can handle the varying load of your application traffic in a single Availability Zone or across multiple Availability Zones.

    The metrics for AWS ELB are obtained through AWS Cloudwatch. Using the [YACE exporter](https://github.com/ivx/yet-another-cloudwatch-exporter). 

    # Exporter configuration
    ## AWS permissions
    The exporter needs permissions to access the resources from the AWS account. 

    First, create an AWS IAM policy on your AWS infrastructure allowing read CloudWatch metrics and get resources by tags. 
    Here is a AWS IAM configuration example:

    ```
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Sid": "CloudWatchExporterPolicy",
                "Effect": "Allow",
                "Action": [
                    "tag:GetResources",
                    "cloudwatch:ListTagsForResource",
                    "cloudwatch:GetMetricStatistics",
                    "cloudwatch:GetMetricData",
                    "cloudwatch:ListMetrics"
                ],
                "Resource": "*"
            }
        ]
    }
    ```

    Then, create a file $HOME/.aws/credentials as the following, substituting the values with your key and password: 

    ```
    # CREDENTIALS FOR AWS ACCOUNT
    aws_region = us-east-1
    aws_access_key_id = AYYYYYZZZZZZ3BLXXXXX
    aws_secret_access_key = bXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    ```

    ## Cloudwatch billing considerations
    Using AWS Cloudwatch for monitoring can incur in additional costs in your AWS billing. 
    Check the [AWS Cloudwatch documentation](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_limits.html) for further details. 

    # Metrics
    - BackendConnectionErrors
    - HealthyHostCount
    - HTTPCode_Backend_2XX
    - HTTPCode_Backend_3XX
    - HTTPCode_Backend_4XX
    - HTTPCode_Backend_5XX
    - HTTPCode_ELB_4XX
    - HTTPCode_ELB_5XX
    - Latency
    - RequestCount
    - SpilloverCount
    - SurgeQueueLength
    - UnHealthyHostCount  

    For further information, consult the [Cloudwatch documentation on ELB metrics](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-cloudwatch-metrics.html). 